.page-header
  %h1.title
    = @subject.name
    = context_icon(@subject)

= render_wiki(@subject.text)

.row
  .col-md-6
    %h4 Comments
    - @subject.comments.each do |comment|
      %blockquote.comment
        %p= comment.comment
        %footer
          %cite
            %span.short-name<>
              = comment.user_short_name
            %em
              = time_ago_in_words(comment.created_at).capitalize
              ago.
    - unless @subject.comments.present?
      %em No comments found

  .col-md-6
    %h4 Add your comment
    - if user_signed_in?
      = render partial: "comments/form"
    - else
      = link_to("Sign in", new_user_session_path)
      to comment.

= content_for(:title) do
  = @subject.name

= content_for(:sidebar) do
  - if @attachments.present?
    %li
      %h4 Attachments
      %ul.nav
        -# Use @attachments, which is restricted by dm only / veil passes
        = list_of(@attachments) do |attachment|
          .thumbnail
            - if attachment.image? # TODO set default url
              = attachment_image_overlay(attachment) do
                = link_to(attachment.attachment.url) do
                  = image_tag(attachment.attachment.thumb.url)
            .caption
              %div
                = link_to(attachment.attachment.url) do
                  = File.basename(attachment.attachment.path, File.extname(attachment.attachment.path)).humanize
                - unless attachment.image?
                  = context_icon(attachment)
              %div
                = attachment_metadata(attachment)

  %li
    %h4 Changes
    / this should probably be a table
    %ul.nav
      - if can? :manage, @subject
        %li
          .nav-text.row
            %span.col-md-3
              Created:
            %span.col-md-9{title: @subject.created_at.year}
              = @subject.created_at.to_s(:short)
      %li
        .nav-text.row
          %span.col-md-3
            Updated:
          %span.col-md-9{title: @subject.updated_at.year}
            = @subject.updated_at.to_s(:short)

-# Use @veil_passes, which is properly restricted by authorization
- if @veil_passes.present?
  = content_for(:sidebar) do
    %li
      %h4 Veil Passes
      %ul.nav
        = list_of(@veil_passes.joins(:user).order("users.first_name, users.last_name")) do |vp|
          .nav-text
            = vp.user_name
            - if vp.includes_attachments
              %abbr{rel: "tooltip", title: "This veil pass includes attachments."}
                = fa_icon("paperclip")

- if can?(:update, Subject) || can?(:destroy, Subject)
  = content_for(:sidebar) do
    %li
      %h4 Actions
      %ul.nav
        - if can?(:update, Subject)
          %li
            = link_to(edit_subject_path(@subject), accesskey: "e") do
              = fa_icon("pencil")
              Edit
        - if can?(:destroy, Subject)
          %li
            = link_to(subject_path(@subject),
                      :method => :delete,
                      :class => "action-danger",
                      :data => {:confirm => "Are you sure?"}) do
              = fa_icon("times")
              Delete
